name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  # build_on_Ubuntu:
  #   runs-on: ubuntu-latest
  #   permissions: write-all
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: true
  #     - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
  #     - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DCMAKE_BUILD_TYPE=Release 
  #       # Проверьте опции и настройки в CMakeLists.txt
  #     - run: cmake --build . --config Release
  #       # Проверьте, что команда сборки корректна
  #     - run: cmake --build . --target package --config Release
  #       # Проверьте, что команда упаковки корректна
  #     - name: Upload Release Asset
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: release-zip
  #         path: ./your-project-name-Release.zip # Путь к Release ZIP-архиву
  #     - name: Build Debug
  #       run: |
  #         cmake . -DPATCH_VERSION=${{ github.run_number }} -DCMAKE_BUILD_TYPE=Debug
  #         cmake --build . --config Debug
  #         cmake --build . --target package --config Debug
  #     - name: Upload Debug Asset
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: debug-deb
  #         path: ./your-project-name-Debug.deb # Путь к Debug DEB-архиву
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.run_number }}-Linux
  #         release_name: Release ${{ github.run_number }} for linux
  #         draft: false
  #         prerelease: false
  #     - name: Upload Release Asset
  #       id: upload-release-asset
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb
  #         asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
  #         asset_content_type: application/vnd.debian.binary-package

  # build_on_MacOS:
  #   runs-on: macos-latest
  #   permissions: write-all
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: true
  #     - name: Install Boost
  #       run: |
  #         brew install boost
  #     - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DCMAKE_BUILD_TYPE=Release
  #     - run: cmake --build . --config Release
  #     - run: cmake --build . --target package --config Release 
  #     - name: Create Release_mac
  #       id: create_release_
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
  #       with:
  #         tag_name: ${{ github.run_number }}-mac 
  #         release_name: Release ${{ github.run_number }} for mac
  #         draft: false
  #         prerelease: false

  #     - name: Upload Release Asset
  #       id: upload-release-asset
  #       uses: actions/upload-release-asset@v1
  #       env:
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release_.outputs.upload_url }}
  #         asset_path: ./helloworld-0.0.${{ github.run_number }}-macOS.zip
  #         asset_name: helloworld-0.0.${{ github.run_number }}-macOS.zip
  #         asset_content_type: application/zip 
  
  build_on_Windows:
    runs-on: windows-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

    

      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DCMAKE_BUILD_TYPE=Release 
        # Проверьте опции и настройки в CMakeLists.txt
        
      - run: cmake --build . --config Release
        # Проверьте, что команда сборки корректна
        
      - run: cmake --build . --target package --config Release
        # Проверьте, что команда упаковки корректна
        
      - name: Upload Release Asset
        uses: actions/upload-artifact@v3
        with:
          name: release-zip
          path: ./your-project-name-Release.zip # Путь к Release ZIP-архиву

      - name: Build Debug
        run: |
          cmake . -DPATCH_VERSION=${{ github.run_number }} -DCMAKE_BUILD_TYPE=Debug -DVCPKG_ROOT=${{ github.workspace }}\vcpkg
          cmake --build . --config Debug
          cmake --build . --target package --config Debug

      - name: Upload Debug Asset
        uses: actions/upload-artifact@v3
        with:
          name: debug-deb
          path: ./your-project-name-Debug.zip # Путь к Debug ZIP-архиву

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}-Windows
          release_name: Release ${{ github.run_number }} for Windows
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Windows.zip # Путь к созданному zip-файлу
          asset_name: helloworld-0.0.${{ github.run_number }}-Windows.zip
          asset_content_type: application/zip